package gui.add_forms;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import data_helpers.AppLogger;
import data.models.Phone;

import javax.swing.*;
import javax.swing.text.*;
import java.awt.*;
import java.text.ParseException;
import java.util.List;

public class PhoneAdding extends JDialog {
    private JButton addButton;
    private JButton closeButton;
    private JFormattedTextField osnPhoneTextField;
    private JTextField dopPhoneTextField;
    private JCheckBox faxCheckBox;
    private JPanel phonePanel;

    public PhoneAdding(JFrame frame, List<Phone> phoneRecords) throws ParseException {

        super(frame);

        frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

        String warning = "Предупреждение";

        setTitle("Добавление телефона");
        setContentPane(phonePanel);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setSize(550, 350);
        setLocationRelativeTo(frame);

        addButton.addActionListener(e -> {
            try {

                String osnPhone = osnPhoneTextField.getText();
                if (osnPhone.isEmpty() || !osnPhoneTextField.isEditValid() || !osnPhone.matches("^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$")) {
                    String message = "Основной телефон указан неверно!!!";
                    JOptionPane.showMessageDialog(this, message, warning, JOptionPane.WARNING_MESSAGE);
                    return;
                }

                frame.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));

                boolean isFax = faxCheckBox.isSelected();
                String dopPhone = dopPhoneTextField.getText();

                Phone phone = new Phone();
                phone.setId((byte) (phoneRecords.size() + 1));
                phone.setOsnPhone(osnPhone);
                phone.setFax(isFax);
                phone.setDopPhone(dopPhone);

                if (phoneRecords.parallelStream().anyMatch(o -> o.equals(phone))) {
                    frame.setCursor(Cursor.getDefaultCursor());
                    String message = "Такой телефон уже вводился!!!";
                    JOptionPane.showMessageDialog(this, message, warning, JOptionPane.WARNING_MESSAGE);
                    return;
                }

                phoneRecords.add(phone);
                frame.repaint();

                frame.setCursor(Cursor.getDefaultCursor());

                dispose();

            } catch (Exception ex) {
                frame.setCursor(Cursor.getDefaultCursor());
                AppLogger.fatal(this, ex);
            }
        });

        closeButton.addActionListener(e -> {
            try {
                dispose();
            } catch (Exception ex) {
                AppLogger.fatal(this, ex);
            }
        });

        faxCheckBox.addActionListener(e -> {
            try {
                if (faxCheckBox.isSelected()) {
                    dopPhoneTextField.setText("");
                    dopPhoneTextField.setEnabled(false);
                } else {
                    dopPhoneTextField.setEnabled(true);
                }
            } catch (Exception ex) {
                AppLogger.fatal(this, ex);
            }
        });

        dopPhoneTextField.setHighlighter(null);
        ((AbstractDocument) dopPhoneTextField.getDocument()).setDocumentFilter(new DocumentFilter() {

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                if (text.matches("^\\d{0," + 20 + "}$") && (20 - fb.getDocument().getLength()) >= text.length())
                    super.replace(fb, offset, length, text, attrs);
            }
        });

        MaskFormatter osnPhoneMask = new MaskFormatter("+7 (###) ###-##-##");
        osnPhoneMask.install(osnPhoneTextField);

        setModal(true);
        setVisible(true);

        frame.setCursor(Cursor.getDefaultCursor());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        phonePanel = new JPanel();
        phonePanel.setLayout(new GridLayoutManager(9, 2, new Insets(20, 20, 20, 20), -1, -1));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 22, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(2);
        label1.setText("  Телефон  ");
        phonePanel.add(label1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, Font.BOLD, 18, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setForeground(new Color(-16777216));
        label2.setHorizontalAlignment(0);
        label2.setHorizontalTextPosition(0);
        label2.setText("  Основной телефон  ");
        phonePanel.add(label2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        Font label3Font = this.$$$getFont$$$(null, Font.BOLD, 18, label3.getFont());
        if (label3Font != null) label3.setFont(label3Font);
        label3.setForeground(new Color(-16777216));
        label3.setHorizontalAlignment(0);
        label3.setHorizontalTextPosition(0);
        label3.setText("  Факс  ");
        phonePanel.add(label3, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        osnPhoneTextField = new JFormattedTextField();
        Font osnPhoneTextFieldFont = this.$$$getFont$$$(null, Font.PLAIN, 18, osnPhoneTextField.getFont());
        if (osnPhoneTextFieldFont != null) osnPhoneTextField.setFont(osnPhoneTextFieldFont);
        phonePanel.add(osnPhoneTextField, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        faxCheckBox = new JCheckBox();
        faxCheckBox.setBorderPainted(false);
        faxCheckBox.setEnabled(true);
        Font faxCheckBoxFont = this.$$$getFont$$$(null, Font.PLAIN, 18, faxCheckBox.getFont());
        if (faxCheckBoxFont != null) faxCheckBox.setFont(faxCheckBoxFont);
        faxCheckBox.setText("");
        phonePanel.add(faxCheckBox, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(60, 60), new Dimension(60, 60), new Dimension(60, 60), 0, false));
        final Spacer spacer1 = new Spacer();
        phonePanel.add(spacer1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        phonePanel.add(spacer2, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        phonePanel.add(spacer3, new GridConstraints(7, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        Font label4Font = this.$$$getFont$$$(null, Font.BOLD, 18, label4.getFont());
        if (label4Font != null) label4.setFont(label4Font);
        label4.setForeground(new Color(-16777216));
        label4.setHorizontalAlignment(0);
        label4.setHorizontalTextPosition(0);
        label4.setText("  Внутренний телефон  ");
        phonePanel.add(label4, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dopPhoneTextField = new JTextField();
        Font dopPhoneTextFieldFont = this.$$$getFont$$$(null, Font.PLAIN, 18, dopPhoneTextField.getFont());
        if (dopPhoneTextFieldFont != null) dopPhoneTextField.setFont(dopPhoneTextFieldFont);
        phonePanel.add(dopPhoneTextField, new GridConstraints(4, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer4 = new Spacer();
        phonePanel.add(spacer4, new GridConstraints(5, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        addButton = new JButton();
        Font addButtonFont = this.$$$getFont$$$(null, -1, 20, addButton.getFont());
        if (addButtonFont != null) addButton.setFont(addButtonFont);
        addButton.setText("  Добавить телефон  ");
        phonePanel.add(addButton, new GridConstraints(8, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 50), null, null, 0, false));
        closeButton = new JButton();
        Font closeButtonFont = this.$$$getFont$$$(null, -1, 20, closeButton.getFont());
        if (closeButtonFont != null) closeButton.setFont(closeButtonFont);
        closeButton.setText("  Закрыть  ");
        phonePanel.add(closeButton, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, new Dimension(-1, 50), null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return phonePanel;
    }

}
