package gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;

public class FileProgressBar extends JDialog {
    private JPanel contentPane;
    private JProgressBar fileProgressBar;

    public FileProgressBar(JFrame frame, boolean indeterminate) {

        super(frame);

        setContentPane(contentPane);
        setSize(450, 120);
        setResizable(false);
        setLocationRelativeTo(frame);
        setUndecorated(true);
        setModal(true);

        fileProgressBar.setIndeterminate(indeterminate);
        if (indeterminate)
            fileProgressBar.setString("");

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(2, 1, new Insets(30, 30, 30, 30), -1, -1));
        contentPane.setBackground(new Color(-1250068));
        Font contentPaneFont = this.$$$getFont$$$(null, Font.BOLD, -1, contentPane.getFont());
        if (contentPaneFont != null) contentPane.setFont(contentPaneFont);
        contentPane.setForeground(new Color(-855310));
        contentPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(new Color(-16777216)), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, new Color(-16777216)));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, Font.BOLD, 16, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Идёт получение файла...");
        contentPane.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(297, 16), null, 0, false));
        fileProgressBar = new JProgressBar();
        fileProgressBar.setBorderPainted(true);
        Font fileProgressBarFont = this.$$$getFont$$$(null, Font.BOLD, 14, fileProgressBar.getFont());
        if (fileProgressBarFont != null) fileProgressBar.setFont(fileProgressBarFont);
        fileProgressBar.setIndeterminate(false);
        fileProgressBar.setMaximum(120000);
        fileProgressBar.setOrientation(0);
        fileProgressBar.setStringPainted(true);
        fileProgressBar.setValue(0);
        contentPane.add(fileProgressBar, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(300, 30), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

}
